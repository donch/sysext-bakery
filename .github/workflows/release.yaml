name: Build and release Systemd sysext images
on:
  workflow_dispatch:
jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    permissions:
      # allow the action to create a release
      contents: write
    strategy:
      max-parallel: 1
      matrix:
        version: ["10.3.16", "11.3.22"]
    steps:
      # checkout the sources
      - uses: actions/checkout@v3

      - name: Get git tag
        id: tag
        uses: devops-actions/action-get-tag@v1.0.2

      - name: Tag / Release checks
        id: tagcheck
        run: |
          if [[ ${{ steps.tag.outputs.tag }} =~ ^[0-9]+$ ]]; then
             echo "TAG_TYPE=numeric" >> $GITHUB_ENV
             echo "DRAFT=${{ toJSON(false) }}" >> $GITHUB_OURPUR
          else
             echo "TAG_TYPE=alphanumeric" >> $GITHUB_ENV
             echo "DRAFT=${{ toJSON(true) }}" >> $GITHUB_OUTPUT
          fi

      - name: Get latest release
        continue-on-error: true
        id: get_release
        uses: kaliber5/action-get-release@v1
        with:
          token: ${{ github.token }}
          tag_name: ${{ steps.tag.outputs.tag }}
          draft: ${{ fromJSON(steps.tagcheck.outputs.DRAFT) }}

      - name: Get SHA256SUMS
        continue-on-error: true
        uses: robinraju/release-downloader@v1.8
        with:
          tag: ${{ steps.tag.outputs.tag }}
          fileName: "SHA256SUMS"

      - name: Asset download
        continue-on-error: true
        uses: dsaltares/fetch-gh-release-asset@master
        with:
         version:  ${{ steps.get_release.outputs.id }}
         file: 'SHA256SUMS'
         token: ${{ secrets.GITHUB_TOKEN }}      

      # build the images and generate a manifest
      - name: Build
        run: |
          set -euo pipefail

          images=(
              "teleport-${{ matrix.version }}"
          )

          for image in ${images[@]}; do
              component="${image%-*}"
              version="${image#*-}"
              "./create_${component}_sysext.sh" "${version}" "${component}"
              mv "${component}.raw" "${image}.raw"
          done

          ls 
          cat SHA256SUMS
          if [ ! -z "${{ steps.get_release.outputs.html_url }}" ]; then
            DL_URL=`echo ${{ steps.get_release.outputs.html_url }} | sed s@/tag/@/download/@`
            echo $DL_URL
            echo "${DL_URL}/SHA256SUMS"
            echo ${{ steps.get_release.outputs.id }}
            curl -fsSLO "$DL_URL/SHA256SUMS"
          fi
          sha256sum *.raw >> SHA256SUMS


      # create a Github release with the generated artifacts
      - name: Release
        uses: softprops/action-gh-release@v1
        if: env.TAG_TYPE == 'numeric'
        with:
          files: |
            SHA256SUMS
            *.raw
      - name: Draft Release
        uses: softprops/action-gh-release@v1
        if: env.TAG_TYPE == 'alphanumeric'
        with:
          draft: true
          files: |
            SHA256SUMS
            *.raw

  multi-build:
    if: ${{ false }}
    name: Multi version build
    runs-on: ubuntu-22.04
    container:  mediadepot/flatcar-developer:${{ matrix.flatcarversion }}
    strategy:
      max-parallel: 6
      matrix:
        flatcarversion: ["3602.2.3"]
    permissions:
      # allow the action to create a release
      contents: write
    steps:
      # checkout the sources
      - uses: actions/checkout@v3
      # build the images and generate a manifest
      - name: Build
        run: |
          set -euo pipefail

          images=(
              "zfs-2.1.13-${{ matrix.flatcarversion }}"
          )

          for image in ${images[@]}; do
              component="${image%%-*}"
              flatcarversion="${image##*-}"
              temp="${image#*-}"
              version="${temp%-*}"
              "./create_${component}_sysext.sh" "${version}" "${component}" "${flatcarversion}"
              mv "${component}.raw" "${image}.raw"
          done

          sha256sum *.raw > SHA256SUMS
      - name: Get git tag
        id: tag
        uses: devops-actions/action-get-tag@v1.0.2

      - name: (Pre)Release check
        run: |
          if [[ ${{ steps.tag.outputs.tag }} =~ ^[0-9]+$ ]]; then
             echo "TAG_TYPE=numeric" >> $GITHUB_ENV
          else
             echo "TAG_TYPE=alphanumeric" >> $GITHUB_ENV
          fi

      # create a Github release with the generated artifacts
      - name: Release
        uses: softprops/action-gh-release@v1
        if: env.TAG_TYPE == 'numeric'
        with:
          files: |
            SHA256SUMS
            *.raw
      - name: Draft Release
        uses: softprops/action-gh-release@v1
        if: env.TAG_TYPE == 'alphanumeric'
        with:
          draft: true
          files: |
            SHA256SUMS
            *.raw
